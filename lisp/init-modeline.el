;;; init-modeline.el --- customize mode-line -*- lexical-binding: t -*-
;;; Commentary:
;;; Code:

(require 'awesome-tray)
;(setq awesome-tray-active-modules '("location" "pdf-view-page" "belong" "file-path" "mode-name" "last-command" "battery" "date"))
(setq awesome-tray-active-modules '("evil" "location" "belong" "file-path" "mode-name" "date"))
(setq awesome-tray-info-padding-right 0)
(setq awesome-tray-hide-mode-line nil)
(setq-default mode-line-format nil)
(awesome-tray-mode 1)

;(require 'doom-modeline)
;(doom-modeline-mode 1)
;(setq doom-modeline-support-imenu t)
;(setq doom-modeline-height 1) ; Only works in GUI
;(setq nerd-icons-scale-factor 5.5)
;((custom-set-faces
;(  '(mode-line-active ((t (:family "JetBrainsMono Nerd Font Mono" :height 1))))
;(  '(mode-line-inactive ((t (:family "JetBrainsMono Nerd Font Mono" :height 1)))))
;(setq doom-modeline-bar-width 4) ; Only works in GUI
;(setq doom-modeline-hud t)
;(setq doom-modeline-window-width-limit 85)
;(setq doom-modeline-spc-face-overrides nil)
;(setq doom-modeline-project-detection 'auto)
;(setq doom-modeline-buffer-file-name-style 'auto)
;(setq doom-modeline-icon nil)
;(setq doom-modeline-major-mode-icon nil)
;(setq doom-modeline-major-mode-color-icon t)
;(setq doom-modeline-buffer-state-icon t)
;(setq doom-modeline-buffer-modification-icon t)
;(setq doom-modeline-lsp-icon t)
;(setq doom-modeline-time-icon nil)
;(setq doom-modeline-time-live-icon nil)
;(setq doom-modeline-time-analogue-clock nil)
;(setq doom-modeline-time-clock-size 0.7)
;(setq doom-modeline-unicode-fallback nil)
;(setq doom-modeline-buffer-name t)
;(setq doom-modeline-highlight-modified-buffer-name nil)
;(setq doom-modeline-column-zero-based t)
;(setq doom-modeline-percent-position '(-3 "%p"))
;(setq doom-modeline-position-line-format '("L%l"))
;(setq doom-modeline-position-column-format '("C%c"))
;(setq doom-modeline-position-column-line-format '("%l:%c"))
;(setq doom-modeline-minor-modes nil)
;(setq doom-modeline-enable-word-count t)
;(setq doom-modeline-continuous-word-count-modes '(markdown-mode gfm-mode org-mode))
;(setq doom-modeline-buffer-encoding nil)
;(setq doom-modeline-indent-info nil)
;(setq doom-modeline-total-line-number nil)
;(setq doom-modeline-vcs-icon t)
;(setq doom-modeline-vcs-max-length 15)
;(setq doom-modeline-vcs-display-function #'doom-modeline-vcs-name)
;(setq doom-modeline-check-icon t)
;(setq doom-modeline-check-simple-format nil)
;(setq doom-modeline-number-limit 99)
;(setq doom-modeline-project-name t)
;(setq doom-modeline-workspace-name t)
;(setq doom-modeline-persp-name t)
;(setq doom-modeline-display-default-persp-name nil)
;(setq doom-modeline-persp-icon t)
;(setq doom-modeline-lsp t)
;(setq doom-modeline-github nil)
;(setq doom-modeline-github-interval (* 30 60))
;(setq doom-modeline-modal t)
;(setq doom-modeline-modal-icon t)
;(setq doom-modeline-modal-modern-icon t)
;(setq doom-modeline-always-show-macro-register nil)
;(setq doom-modeline-mu4e nil)
;((mu4e-alert-enable-mode-line-display)
;(setq doom-modeline-gnus nil)
;(setq doom-modeline-gnus-timer 0)
;(setq doom-modeline-gnus-excluded-groups '("dummy.group"))
;(setq doom-modeline-irc nil)
;(setq doom-modeline-irc-stylize 'identity)
;(setq doom-modeline-battery nil)
;(setq doom-modeline-time t)
;(setq doom-modeline-display-misc-in-all-mode-lines t)
;(setq doom-modeline-buffer-file-name-function #'identity)
;(setq doom-modeline-buffer-file-truename-function #'identity)
;(setq doom-modeline-env-version t)
;(setq doom-modeline-env-enable-python t)
;(setq doom-modeline-env-enable-ruby t)
;(setq doom-modeline-env-enable-perl t)
;(setq doom-modeline-env-enable-go t)
;(setq doom-modeline-env-enable-elixir t)
;(setq doom-modeline-env-enable-rust t)
;(setq doom-modeline-env-python-executable "python")
;(setq doom-modeline-env-ruby-executable "ruby")
;(setq doom-modeline-env-perl-executable "perl")
;(setq doom-modeline-env-go-executable "go")
;(setq doom-modeline-env-elixir-executable "iex")
;(setq doom-modeline-env-rust-executable "rustc")
;(setq doom-modeline-env-load-string "...")
;((setq doom-modeline-always-visible-segments '(mu4e irc))
;(setq doom-modeline-before-update-env-hook nil)
;()setq doom-modeline-after-update-env-hook nil)

(provide 'init-modeline)
;;; init-modeline.el ends here
